data[[i]]<-data[[i]][  order( data[[i]][,1] ),]
colnames(data[[i]])<-c("chromosome","start","stop","content","window")
data[[i]]$type<-"TE"
data[[i]]$type2 <-i
}
data[["TEislands"]]$window2<-0
data[["TEislands"]]$window2[data[["TEislands"]]$window<0.5]<- NA
data[["TEislands"]]$window<-data[["TEislands"]]$window2
data[["TEislands"]] <- subset(data[["TEislands"]], select = -c(window2) )
dataTEs<-do.call("rbind", data[groups[groups!="TEislands"]])
data2<-rbind(dataTEs,dataGenes)
# plot only largest 10 scaffolds
data2<-subset(data2,chromosome %in% names(scfOrder)[1:8])
teislSet<-subset(teisl,chromosome %in% names(scfOrder)[1:8])
data2$type<-as.factor(data2$type)
data2$windowCenter<-rowMeans(cbind(data2$start,data2$stop))
data3<-data2
?brewer.all
?geom_area
coloring<-brewer.pal(n = 5, name = "Dark2")
data3$window[data3$type=="host"]<- -data3$window[data3$type=="host"]
data3$type2 <- factor(data3$type2, levels = c("exon","Helitron","TIR","nonLTR","Gypsy","Copia"))
data3$type <- factor(data3$type, levels = c("TE","host"))
p <- ggplot(data = data3, aes(x = start, y = as.numeric(window), fill=type2,col=type2),stroke=0) +
geom_area(stat = "identity")
pf<-p + facet_grid(cols=vars(chromosome), scales = 'free', space = 'free_x', switch = 'x') +
theme_classic() +
theme(panel.spacing.x=unit(0.01,"lines"),
panel.spacing.y=unit(-1,"lines"),
panel.background = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
coord_cartesian(ylim=c(-0.5,0.8))+
scale_y_continuous(name="relative content",breaks=c(-0.5,0,0.5),labels=c(-0.5,0,0.5))+
scale_x_continuous(expand = c(0, 0))+theme(legend.position = "right")+xlab(NULL)+
scale_color_manual(values=c(
"Copia"=coloring[5],
"Gypsy"=coloring[4],
"nonLTR"=coloring[3],
"TIR"=coloring[2],
"Helitron"=coloring[1],
"exon"="blue"
))+
scale_fill_manual(values=c(
"Copia"=alpha(coloring[5],.2),
"Gypsy"=alpha(coloring[4],.2),
"nonLTR"=alpha(coloring[3],.2),
"TIR"=alpha(coloring[2],.2),
"Helitron"=alpha(coloring[1],.2),
"exon"=alpha("blue",0.5)
))+
geom_hline(yintercept=c(0.5), linetype="dotted") +
geom_segment(data=teislSet,aes(x=start,xend=stop),y=-0.5,yend=0.7,size=4,inherit.aes=FALSE,col=alpha('yellow',0.4))
pf
rm(list=ls())
library(rtracklayer)
library(GenomicRanges)
library(GenomicFeatures)
library(ggplot2)
library(cowplot)
library(ggbio)
library(zoo)
library(RColorBrewer)
teisl<-read.csv("./bar_TEisland.bed",sep="\t",header=F)
teisl$V1<-as.factor(sprintf("chr%02d", as.numeric(gsub(".*?([0-9]+)$","\\1",perl=T,teisl$V1))))
colnames(teisl)<-c("chromosome","start","stop")#,"content","window","type","type2","windowCenter")
listOfAllTEs<-list()
groups<-c("Gypsy","Copia","nonLTR","TIR","Helitron","TEislands")
for(i in groups){
listOfAllTEs[[i]]<-read.csv(paste("./",i,".windows.coverage.bed",sep=""),sep='\t',F)
listOfAllTEs[[i]]$V1<-as.factor(sprintf("chr%02d", as.numeric(gsub(".*?([0-9]+)$","\\1",perl=T,listOfAllTEs[[i]]$V1))))
}
######
genes<-read.csv("./Genes.windows.coverage.bed",sep='\t',F)
genes$V1<-as.factor(sprintf("chr%02d", as.numeric(gsub(".*?([0-9]+)$","\\1",perl=T,genes$V1))))
allGenes<-split(x = genes,f =genes$V1)
scfOrder<-sort(unlist(lapply(allGenes,function(x) nrow(x))),decreasing = T)
allGenes<-allGenes[names(scfOrder)]
all<-list()
for(i in groups){
all[[i]]<-split(x = listOfAllTEs[[i]],f =listOfAllTEs[[i]]$V1)
all[[i]]<-all[[i]][names(scfOrder)]
}
windowwidth<-5
windowby<-1
rollGenes<-lapply(allGenes,function(x) rollapply(data=x$V4,FUN=mean,width=windowwidth,align="center",partial=T,fill=NA,by=windowby))
for(i in 1:length(allGenes)){
allGenes[[i]]<-cbind(allGenes[[i]],rollGenes[[i]])
colnames(allGenes[[i]])[5]<-"window"
}
meanContentGenes<-data.frame(unlist(lapply(allGenes,function(x) mean(x$window,na.rm=T))))
colnames(meanContentGenes)<-"meanC"
dataGenes<- do.call("rbind", allGenes)
dataGenes<-dataGenes[  order( dataGenes[,1] ),]
colnames(dataGenes)<-c("chromosome","start","stop","content","window")
dataGenes$type<-"host"
dataGenes$type2<-"exon"
rolls<-list()
for(i in groups){
rolls[[i]]<-lapply(all[[i]],function(x) rollapply(data=x$V4,FUN=mean,width=windowwidth,align="center",partial=T,fill=NA,by=windowby))
}
for(p in groups){
for(i in 1:length(all[[p]])){
all[[p]][[i]]<-cbind(all[[p]][[i]],rolls[[p]][[i]])
colnames(all[[p]][[i]])[5]<-"window"
}
}
meanContent<-list()
data<-list()
for(i in groups){
meanContent[[i]]<-data.frame(unlist(lapply(all[[i]],function(x) mean(x$window,na.rm=T))))
colnames(meanContent[[i]])<-"meanC"
data[[i]]<- do.call("rbind", all[[i]])
data[[i]]<-data[[i]][  order( data[[i]][,1] ),]
colnames(data[[i]])<-c("chromosome","start","stop","content","window")
data[[i]]$type<-"TE"
data[[i]]$type2 <-i
}
data[["TEislands"]]$window2<-0
data[["TEislands"]]$window2[data[["TEislands"]]$window<0.5]<- NA
data[["TEislands"]]$window<-data[["TEislands"]]$window2
data[["TEislands"]] <- subset(data[["TEislands"]], select = -c(window2) )
dataTEs<-do.call("rbind", data[groups[groups!="TEislands"]])
data2<-rbind(dataTEs,dataGenes)
# plot only largest 10 scaffolds
data2<-subset(data2,chromosome %in% names(scfOrder)[1:8])
teislSet<-subset(teisl,chromosome %in% names(scfOrder)[1:8])
data2$type<-as.factor(data2$type)
data2$windowCenter<-rowMeans(cbind(data2$start,data2$stop))
data3<-data2
?brewer.all
?geom_area
coloring<-brewer.pal(n = 5, name = "Dark2")
data3$window[data3$type=="host"]<- -data3$window[data3$type=="host"]
data3$type2 <- factor(data3$type2, levels = c("exon","Helitron","TIR","nonLTR","Gypsy","Copia"))
data3$type <- factor(data3$type, levels = c("TE","host"))
p <- ggplot(data = data3, aes(x = start, y = as.numeric(window), fill=type2,col=type2),stroke=0) +
geom_area(stat = "identity")
pf<-p + facet_grid(cols=vars(chromosome), scales = 'free', space = 'free_x', switch = 'x') +
theme_classic() +
theme(panel.spacing.x=unit(0.01,"lines"),
panel.spacing.y=unit(-1,"lines"),
panel.background = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
coord_cartesian(ylim=c(-0.5,0.8))+
scale_y_continuous(name="relative content",breaks=c(-0.5,0,0.5),labels=c(-0.5,0,0.5))+
scale_x_continuous(expand = c(0, 0))+theme(legend.position = "right")+xlab(NULL)+
scale_color_manual(values=c(
"Copia"=coloring[5],
"Gypsy"="red",
"nonLTR"=coloring[3],
"TIR"=coloring[2],
"Helitron"=coloring[1],
"exon"="blue"
))+
scale_fill_manual(values=c(
"Copia"=alpha(coloring[5],.2),
"Gypsy"=alpha("red",.2),
"nonLTR"=alpha(coloring[3],.2),
"TIR"=alpha(coloring[2],.2),
"Helitron"=alpha(coloring[1],.2),
"exon"=alpha("blue",0.5)
))+
geom_hline(yintercept=c(0.5), linetype="dotted") +
geom_segment(data=teislSet,aes(x=start,xend=stop),y=-0.5,yend=0.7,size=4,inherit.aes=FALSE,col=alpha('yellow',0.4))
rm(list=ls())
library(rtracklayer)
library(GenomicRanges)
library(GenomicFeatures)
library(ggplot2)
library(cowplot)
library(ggbio)
library(zoo)
library(RColorBrewer)
teisl<-read.csv("./bar_TEisland.bed",sep="\t",header=F)
teisl$V1<-as.factor(sprintf("chr%02d", as.numeric(gsub(".*?([0-9]+)$","\\1",perl=T,teisl$V1))))
colnames(teisl)<-c("chromosome","start","stop")#,"content","window","type","type2","windowCenter")
listOfAllTEs<-list()
groups<-c("Gypsy","Copia","nonLTR","TIR","Helitron","TEislands")
for(i in groups){
listOfAllTEs[[i]]<-read.csv(paste("./",i,".windows.coverage.bed",sep=""),sep='\t',F)
listOfAllTEs[[i]]$V1<-as.factor(sprintf("chr%02d", as.numeric(gsub(".*?([0-9]+)$","\\1",perl=T,listOfAllTEs[[i]]$V1))))
}
######
genes<-read.csv("./Genes.windows.coverage.bed",sep='\t',F)
genes$V1<-as.factor(sprintf("chr%02d", as.numeric(gsub(".*?([0-9]+)$","\\1",perl=T,genes$V1))))
allGenes<-split(x = genes,f =genes$V1)
scfOrder<-sort(unlist(lapply(allGenes,function(x) nrow(x))),decreasing = T)
allGenes<-allGenes[names(scfOrder)]
all<-list()
for(i in groups){
all[[i]]<-split(x = listOfAllTEs[[i]],f =listOfAllTEs[[i]]$V1)
all[[i]]<-all[[i]][names(scfOrder)]
}
windowwidth<-5
windowby<-1
rollGenes<-lapply(allGenes,function(x) rollapply(data=x$V4,FUN=mean,width=windowwidth,align="center",partial=T,fill=NA,by=windowby))
for(i in 1:length(allGenes)){
allGenes[[i]]<-cbind(allGenes[[i]],rollGenes[[i]])
colnames(allGenes[[i]])[5]<-"window"
}
meanContentGenes<-data.frame(unlist(lapply(allGenes,function(x) mean(x$window,na.rm=T))))
colnames(meanContentGenes)<-"meanC"
dataGenes<- do.call("rbind", allGenes)
dataGenes<-dataGenes[  order( dataGenes[,1] ),]
colnames(dataGenes)<-c("chromosome","start","stop","content","window")
dataGenes$type<-"host"
dataGenes$type2<-"exon"
rolls<-list()
for(i in groups){
rolls[[i]]<-lapply(all[[i]],function(x) rollapply(data=x$V4,FUN=mean,width=windowwidth,align="center",partial=T,fill=NA,by=windowby))
}
for(p in groups){
for(i in 1:length(all[[p]])){
all[[p]][[i]]<-cbind(all[[p]][[i]],rolls[[p]][[i]])
colnames(all[[p]][[i]])[5]<-"window"
}
}
meanContent<-list()
data<-list()
for(i in groups){
meanContent[[i]]<-data.frame(unlist(lapply(all[[i]],function(x) mean(x$window,na.rm=T))))
colnames(meanContent[[i]])<-"meanC"
data[[i]]<- do.call("rbind", all[[i]])
data[[i]]<-data[[i]][  order( data[[i]][,1] ),]
colnames(data[[i]])<-c("chromosome","start","stop","content","window")
data[[i]]$type<-"TE"
data[[i]]$type2 <-i
}
data[["TEislands"]]$window2<-0
data[["TEislands"]]$window2[data[["TEislands"]]$window<0.5]<- NA
data[["TEislands"]]$window<-data[["TEislands"]]$window2
data[["TEislands"]] <- subset(data[["TEislands"]], select = -c(window2) )
dataTEs<-do.call("rbind", data[groups[groups!="TEislands"]])
data2<-rbind(dataTEs,dataGenes)
# plot only largest 10 scaffolds
data2<-subset(data2,chromosome %in% names(scfOrder)[1:8])
teislSet<-subset(teisl,chromosome %in% names(scfOrder)[1:8])
data2$type<-as.factor(data2$type)
data2$windowCenter<-rowMeans(cbind(data2$start,data2$stop))
data3<-data2
?brewer.all
?geom_area
coloring<-brewer.pal(n = 5, name = "Dark2")
data3$window[data3$type=="host"]<- -data3$window[data3$type=="host"]
data3$type2 <- factor(data3$type2, levels = c("exon","Helitron","TIR","nonLTR","Gypsy","Copia"))
data3$type <- factor(data3$type, levels = c("TE","host"))
p <- ggplot(data = data3, aes(x = start, y = as.numeric(window), fill=type2,col=type2),stroke=0) +
geom_area(stat = "identity")
pf<-p + facet_grid(cols=vars(chromosome), scales = 'free', space = 'free_x', switch = 'x') +
theme_classic() +
theme(panel.spacing.x=unit(0.01,"lines"),
panel.spacing.y=unit(-1,"lines"),
panel.background = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
coord_cartesian(ylim=c(-0.5,0.8))+
scale_y_continuous(name="relative content",breaks=c(-0.5,0,0.5),labels=c(-0.5,0,0.5))+
scale_x_continuous(expand = c(0, 0))+theme(legend.position = "right")+xlab(NULL)+
scale_color_manual(values=c(
"Copia"=coloring[5],
"Gypsy"="red",
"nonLTR"=coloring[3],
"TIR"=coloring[2],
"Helitron"=coloring[1],
"exon"="blue"
))+
scale_fill_manual(values=c(
"Copia"=alpha(coloring[5],.2),
"Gypsy"=alpha("red",.2),
"nonLTR"=alpha(coloring[3],.2),
"TIR"=alpha(coloring[2],.2),
"Helitron"=alpha(coloring[1],.2),
"exon"=alpha("blue",0.5)
))+
geom_hline(yintercept=c(0.5), linetype="dotted") +
geom_segment(data=teislSet,aes(x=start,xend=stop),y=-0.5,yend=0.7,size=4,inherit.aes=FALSE,col=alpha('yellow',0.4))
pf
rm(list=ls())
library(rtracklayer)
library(GenomicRanges)
library(GenomicFeatures)
library(ggplot2)
library(cowplot)
library(ggbio)
library(zoo)
library(RColorBrewer)
teisl<-read.csv("./bar_TEisland.bed",sep="\t",header=F)
teisl$V1<-as.factor(sprintf("chr%02d", as.numeric(gsub(".*?([0-9]+)$","\\1",perl=T,teisl$V1))))
colnames(teisl)<-c("chromosome","start","stop")#,"content","window","type","type2","windowCenter")
listOfAllTEs<-list()
groups<-c("Gypsy","Copia","nonLTR","TIR","Helitron","TEislands")
for(i in groups){
listOfAllTEs[[i]]<-read.csv(paste("./",i,".windows.coverage.bed",sep=""),sep='\t',F)
listOfAllTEs[[i]]$V1<-as.factor(sprintf("chr%02d", as.numeric(gsub(".*?([0-9]+)$","\\1",perl=T,listOfAllTEs[[i]]$V1))))
}
######
genes<-read.csv("./Genes.windows.coverage.bed",sep='\t',F)
genes$V1<-as.factor(sprintf("chr%02d", as.numeric(gsub(".*?([0-9]+)$","\\1",perl=T,genes$V1))))
allGenes<-split(x = genes,f =genes$V1)
scfOrder<-sort(unlist(lapply(allGenes,function(x) nrow(x))),decreasing = T)
allGenes<-allGenes[names(scfOrder)]
all<-list()
for(i in groups){
all[[i]]<-split(x = listOfAllTEs[[i]],f =listOfAllTEs[[i]]$V1)
all[[i]]<-all[[i]][names(scfOrder)]
}
windowwidth<-5
windowby<-1
rollGenes<-lapply(allGenes,function(x) rollapply(data=x$V4,FUN=mean,width=windowwidth,align="center",partial=T,fill=NA,by=windowby))
for(i in 1:length(allGenes)){
allGenes[[i]]<-cbind(allGenes[[i]],rollGenes[[i]])
colnames(allGenes[[i]])[5]<-"window"
}
meanContentGenes<-data.frame(unlist(lapply(allGenes,function(x) mean(x$window,na.rm=T))))
colnames(meanContentGenes)<-"meanC"
dataGenes<- do.call("rbind", allGenes)
dataGenes<-dataGenes[  order( dataGenes[,1] ),]
colnames(dataGenes)<-c("chromosome","start","stop","content","window")
dataGenes$type<-"host"
dataGenes$type2<-"exon"
rolls<-list()
for(i in groups){
rolls[[i]]<-lapply(all[[i]],function(x) rollapply(data=x$V4,FUN=mean,width=windowwidth,align="center",partial=T,fill=NA,by=windowby))
}
for(p in groups){
for(i in 1:length(all[[p]])){
all[[p]][[i]]<-cbind(all[[p]][[i]],rolls[[p]][[i]])
colnames(all[[p]][[i]])[5]<-"window"
}
}
meanContent<-list()
data<-list()
for(i in groups){
meanContent[[i]]<-data.frame(unlist(lapply(all[[i]],function(x) mean(x$window,na.rm=T))))
colnames(meanContent[[i]])<-"meanC"
data[[i]]<- do.call("rbind", all[[i]])
data[[i]]<-data[[i]][  order( data[[i]][,1] ),]
colnames(data[[i]])<-c("chromosome","start","stop","content","window")
data[[i]]$type<-"TE"
data[[i]]$type2 <-i
}
data[["TEislands"]]$window2<-0
data[["TEislands"]]$window2[data[["TEislands"]]$window<0.5]<- NA
data[["TEislands"]]$window<-data[["TEislands"]]$window2
data[["TEislands"]] <- subset(data[["TEislands"]], select = -c(window2) )
dataTEs<-do.call("rbind", data[groups[groups!="TEislands"]])
data2<-rbind(dataTEs,dataGenes)
# plot only largest 10 scaffolds
data2<-subset(data2,chromosome %in% names(scfOrder)[1:8])
teislSet<-subset(teisl,chromosome %in% names(scfOrder)[1:8])
data2$type<-as.factor(data2$type)
data2$windowCenter<-rowMeans(cbind(data2$start,data2$stop))
data3<-data2
?brewer.all
?geom_area
coloring<-brewer.pal(n = 5, name = "Dark2")
data3$window[data3$type=="host"]<- -data3$window[data3$type=="host"]
data3$type2 <- factor(data3$type2, levels = c("exon","Helitron","TIR","nonLTR","Gypsy","Copia"))
data3$type <- factor(data3$type, levels = c("TE","host"))
p <- ggplot(data = data3, aes(x = start, y = as.numeric(window), fill=type2,col=type2),stroke=0) +
geom_area(stat = "identity")
pf<-p + facet_grid(cols=vars(chromosome), scales = 'free', space = 'free_x', switch = 'x') +
theme_classic() +
theme(panel.spacing.x=unit(0.01,"lines"),
panel.spacing.y=unit(-1,"lines"),
panel.background = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
coord_cartesian(ylim=c(-0.5,0.8))+
scale_y_continuous(name="relative content",breaks=c(-0.5,0,0.5),labels=c(-0.5,0,0.5))+
scale_x_continuous(expand = c(0, 0))+theme(legend.position = "right")+xlab(NULL)+
scale_color_manual(values=c(
"Copia"="yellow",
"Gypsy"="red",
"nonLTR"="blue",
"TIR"="green",
"Helitron"="cyan",
"exon"="purple"
))+
scale_fill_manual(values=c(
"Copia"=alpha("yellow",.2),
"Gypsy"=alpha("red",.2),
"nonLTR"=alpha("blue",.2),
"TIR"=alpha("green",.2),
"Helitron"=alpha("cyan",.2),
"exon"=alpha("purple",0.5)
))+
geom_hline(yintercept=c(0.5), linetype="dotted") +
geom_segment(data=teislSet,aes(x=start,xend=stop),y=-0.5,yend=0.7,size=4,inherit.aes=FALSE,col=alpha('orange',0.4))
pf
dev.print(pdf,"./TEislands.1.pdf",width=10,height=2.25)
rm(list=ls())
library(rtracklayer)
library(GenomicRanges)
library(GenomicFeatures)
library(ggplot2)
library(cowplot)
library(ggbio)
library(zoo)
library(RColorBrewer)
teisl<-read.csv("./bar_TEisland.bed",sep="\t",header=F)
teisl$V1<-as.factor(sprintf("chr%02d", as.numeric(gsub(".*?([0-9]+)$","\\1",perl=T,teisl$V1))))
colnames(teisl)<-c("chromosome","start","stop")#,"content","window","type","type2","windowCenter")
listOfAllTEs<-list()
groups<-c("Gypsy","Copia","nonLTR","TIR","Helitron","TEislands")
for(i in groups){
listOfAllTEs[[i]]<-read.csv(paste("./",i,".windows.coverage.bed",sep=""),sep='\t',F)
listOfAllTEs[[i]]$V1<-as.factor(sprintf("chr%02d", as.numeric(gsub(".*?([0-9]+)$","\\1",perl=T,listOfAllTEs[[i]]$V1))))
}
######
genes<-read.csv("./Genes.windows.coverage.bed",sep='\t',F)
genes$V1<-as.factor(sprintf("chr%02d", as.numeric(gsub(".*?([0-9]+)$","\\1",perl=T,genes$V1))))
allGenes<-split(x = genes,f =genes$V1)
scfOrder<-sort(unlist(lapply(allGenes,function(x) nrow(x))),decreasing = T)
allGenes<-allGenes[names(scfOrder)]
all<-list()
for(i in groups){
all[[i]]<-split(x = listOfAllTEs[[i]],f =listOfAllTEs[[i]]$V1)
all[[i]]<-all[[i]][names(scfOrder)]
}
windowwidth<-5
windowby<-1
rollGenes<-lapply(allGenes,function(x) rollapply(data=x$V4,FUN=mean,width=windowwidth,align="center",partial=T,fill=NA,by=windowby))
for(i in 1:length(allGenes)){
allGenes[[i]]<-cbind(allGenes[[i]],rollGenes[[i]])
colnames(allGenes[[i]])[5]<-"window"
}
meanContentGenes<-data.frame(unlist(lapply(allGenes,function(x) mean(x$window,na.rm=T))))
colnames(meanContentGenes)<-"meanC"
dataGenes<- do.call("rbind", allGenes)
dataGenes<-dataGenes[  order( dataGenes[,1] ),]
colnames(dataGenes)<-c("chromosome","start","stop","content","window")
dataGenes$type<-"host"
dataGenes$type2<-"exon"
rolls<-list()
for(i in groups){
rolls[[i]]<-lapply(all[[i]],function(x) rollapply(data=x$V4,FUN=mean,width=windowwidth,align="center",partial=T,fill=NA,by=windowby))
}
for(p in groups){
for(i in 1:length(all[[p]])){
all[[p]][[i]]<-cbind(all[[p]][[i]],rolls[[p]][[i]])
colnames(all[[p]][[i]])[5]<-"window"
}
}
meanContent<-list()
data<-list()
for(i in groups){
meanContent[[i]]<-data.frame(unlist(lapply(all[[i]],function(x) mean(x$window,na.rm=T))))
colnames(meanContent[[i]])<-"meanC"
data[[i]]<- do.call("rbind", all[[i]])
data[[i]]<-data[[i]][  order( data[[i]][,1] ),]
colnames(data[[i]])<-c("chromosome","start","stop","content","window")
data[[i]]$type<-"TE"
data[[i]]$type2 <-i
}
data[["TEislands"]]$window2<-0
data[["TEislands"]]$window2[data[["TEislands"]]$window<0.5]<- NA
data[["TEislands"]]$window<-data[["TEislands"]]$window2
data[["TEislands"]] <- subset(data[["TEislands"]], select = -c(window2) )
dataTEs<-do.call("rbind", data[groups[groups!="TEislands"]])
data2<-rbind(dataTEs,dataGenes)
# plot only largest 10 scaffolds
data2<-subset(data2,chromosome %in% names(scfOrder)[9:20])
teislSet<-subset(teisl,chromosome %in% names(scfOrder)[9:20])
data2$type<-as.factor(data2$type)
data2$windowCenter<-rowMeans(cbind(data2$start,data2$stop))
data3<-data2
?brewer.all
?geom_area
coloring<-brewer.pal(n = 5, name = "Dark2")
data3$window[data3$type=="host"]<- -data3$window[data3$type=="host"]
data3$type2 <- factor(data3$type2, levels = c("exon","Helitron","TIR","nonLTR","Gypsy","Copia"))
data3$type <- factor(data3$type, levels = c("TE","host"))
p <- ggplot(data = data3, aes(x = start, y = as.numeric(window), fill=type2,col=type2),stroke=0) +
geom_area(stat = "identity")
pf<-p + facet_grid(cols=vars(chromosome), scales = 'free', space = 'free_x', switch = 'x') +
theme_classic() +
theme(panel.spacing.x=unit(0.01,"lines"),
panel.spacing.y=unit(-1,"lines"),
panel.background = element_blank(),
axis.text.x = element_blank(),
axis.ticks.x = element_blank()
) +
coord_cartesian(ylim=c(-0.5,0.8))+
scale_y_continuous(name="relative content",breaks=c(-0.5,0,0.5),labels=c(-0.5,0,0.5))+
scale_x_continuous(expand = c(0, 0))+theme(legend.position = "right")+xlab(NULL)+
scale_color_manual(values=c(
"Copia"="yellow",
"Gypsy"="red",
"nonLTR"="blue",
"TIR"="green",
"Helitron"="cyan",
"exon"="purple"
))+
scale_fill_manual(values=c(
"Copia"=alpha("yellow",.2),
"Gypsy"=alpha("red",.2),
"nonLTR"=alpha("blue",.2),
"TIR"=alpha("green",.2),
"Helitron"=alpha("cyan",.2),
"exon"=alpha("purple",0.5)
))+
geom_hline(yintercept=c(0.5), linetype="dotted") +
geom_segment(data=teislSet,aes(x=start,xend=stop),y=-0.5,yend=0.7,size=4,inherit.aes=FALSE,col=alpha('orange',0.4))
pf
dev.print(pdf,"./TEislands.2.pdf",width=10,height=2.25)
